# Default values for game2048.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

image:
  #repository: public.ecr.aws/l6m2t8p7/docker-2048
  repository: public.ecr.aws/kishorj/docker-2048
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: game2048.false
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  #livenessProbe:
  #httpGet:
  #  path: /
  #  port: 80
  #readinessProbe:
  #httpGet:
  #  path: /
  #  port: 80

# Additional volumes on the output Deployment definition.
volumes:
 - name: game2048
   hostPath:
     # directory location on host
     path: /tmp/data/game2048

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
 - name: game2048
   mountPath: "/usr/share/nginx/html"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
